
package webService;

import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "UserService", targetNamespace = "http://services.chatapp.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface UserService {


    /**
     * 
     * @param userID
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(operationName = "user_id_exists")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "user_id_exists", targetNamespace = "http://services.chatapp.com/", className = "webService.UserIdExists")
    @ResponseWrapper(localName = "user_id_existsResponse", targetNamespace = "http://services.chatapp.com/", className = "webService.UserIdExistsResponse")
    @Action(input = "http://services.chatapp.com/UserService/user_id_existsRequest", output = "http://services.chatapp.com/UserService/user_id_existsResponse")
    public Boolean userIdExists(
        @WebParam(name = "userID", targetNamespace = "")
        String userID);

    /**
     * 
     * @param password
     * @param loginID
     * @param nickName
     */
    @WebMethod(operationName = "add_user")
    @Oneway
    @RequestWrapper(localName = "add_user", targetNamespace = "http://services.chatapp.com/", className = "webService.AddUser")
    @Action(input = "http://services.chatapp.com/UserService/add_user")
    public void addUser(
        @WebParam(name = "nickName", targetNamespace = "")
        String nickName,
        @WebParam(name = "loginID", targetNamespace = "")
        String loginID,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param userID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNicknameBasedOnUserID", targetNamespace = "http://services.chatapp.com/", className = "webService.GetNicknameBasedOnUserID")
    @ResponseWrapper(localName = "getNicknameBasedOnUserIDResponse", targetNamespace = "http://services.chatapp.com/", className = "webService.GetNicknameBasedOnUserIDResponse")
    @Action(input = "http://services.chatapp.com/UserService/getNicknameBasedOnUserIDRequest", output = "http://services.chatapp.com/UserService/getNicknameBasedOnUserIDResponse")
    public String getNicknameBasedOnUserID(
        @WebParam(name = "userID", targetNamespace = "")
        String userID);

    /**
     * 
     * @param password
     * @param userID
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://services.chatapp.com/", className = "webService.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://services.chatapp.com/", className = "webService.LoginResponse")
    @Action(input = "http://services.chatapp.com/UserService/loginRequest", output = "http://services.chatapp.com/UserService/loginResponse")
    public Boolean login(
        @WebParam(name = "userID", targetNamespace = "")
        String userID,
        @WebParam(name = "password", targetNamespace = "")
        String password);

}
